{"version":3,"sources":["Rock/Berea.vti","App.js","reportWebVitals.js","index.js"],"names":["Slider","props","view","useContext","Contexts","ViewContext","type","min","max","value","onChange","e","Number","currentTarget","setValue","setTimeout","renderView","style","position","zIndex","left","top","App","useState","iSlice","setISlice","jSlice","setJSlice","kSlice","setKSlice","colorWindow","setColorWindow","colorLevel","setColorLevel","width","height","display","id","cameraPosition","cameraViewUp","cameraParallelProjection","background","vtkClass","url","rock","property","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edf526ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Berea.60292999.vti\";","import React, { useState, useContext } from \"react\";\n\nimport rock from \"./Rock/Berea.vti\";\n\nimport {\n  View,\n  ShareDataSet,\n  SliceRepresentation,\n  Reader,\n  Contexts,\n  VolumeController,\n  VolumeRepresentation,\n} from \"react-vtk-js\";\n\nfunction Slider(props) {\n  const view = useContext(Contexts.ViewContext);\n  function onChange(e) {\n    const value = Number(e.currentTarget.value);\n    props.setValue(value);\n    setTimeout(view.renderView, 0);\n  }\n  return (\n    <input\n      type=\"range\"\n      min=\"0\"\n      max={props.max}\n      value={props.value}\n      onChange={onChange}\n      style={{\n        position: \"absolute\",\n        zIndex: 100,\n        left: \"5px\",\n        top: \"5px\",\n        ...props.style,\n      }}\n    />\n  );\n}\n\nfunction App(props) {\n  const [iSlice, setISlice] = useState(128);\n  const [jSlice, setJSlice] = useState(128);\n  const [kSlice, setKSlice] = useState(47);\n  const [colorWindow, setColorWindow] = useState(4095);\n  const [colorLevel, setColorLevel] = useState(1000);\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <div style={{ width: \"50vw\", height: \"100vh\", display: \"inline-block\" }}>\n        <View\n          id=\"0\"\n          cameraPosition={[1, 0, 0]}\n          cameraViewUp={[0, 0, -1]}\n          cameraParallelProjection={false}\n          background={[1, 1, 1]}\n        >\n          <ShareDataSet>\n            <Reader vtkClass=\"vtkXMLImageDataReader\" url={rock} />\n          </ShareDataSet>\n          <Slider\n            max={399}\n            value={iSlice}\n            setValue={setISlice}\n            style={{ left: \"5px\" }}\n          />\n          <Slider\n            max={399}\n            value={jSlice}\n            setValue={setJSlice}\n            style={{ left: \"155px\" }}\n          />\n          <Slider\n            max={399}\n            value={kSlice}\n            setValue={setKSlice}\n            style={{ left: \"305px\" }}\n          />\n          <Slider\n            max={5}\n            value={colorLevel}\n            setValue={setColorLevel}\n            style={{ top: \"30px\", left: \"5px\" }}\n          />\n          <Slider\n            max={5}\n            value={colorWindow}\n            setValue={setColorWindow}\n            style={{ top: \"30px\", left: \"305px\" }}\n          />\n          <SliceRepresentation\n            iSlice={iSlice}\n            property={{ colorWindow, colorLevel }}\n          >\n            <ShareDataSet />\n          </SliceRepresentation>\n          <SliceRepresentation\n            jSlice={jSlice}\n            property={{ colorWindow, colorLevel }}\n          >\n            <ShareDataSet />\n          </SliceRepresentation>\n          <SliceRepresentation\n            kSlice={kSlice}\n            property={{ colorWindow, colorLevel }}\n          >\n            <ShareDataSet />\n          </SliceRepresentation>\n        </View>\n      </div>\n      <div style={{ width: \"50vw\", height: \"100vh\", display: \"inline-block\" }}>\n        <View\n          id=\"0\"\n          background={[0, 0, 0]}\n          cameraPosition={[1, 0, 0]}\n          cameraViewUp={[0, 0, -1]}\n          cameraParallelProjection={false}\n        >\n          <VolumeRepresentation>\n            <div style={{ display: \"none\" }}>\n              <VolumeController />\n            </div>\n            <ShareDataSet />\n          </VolumeRepresentation>\n        </View>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}